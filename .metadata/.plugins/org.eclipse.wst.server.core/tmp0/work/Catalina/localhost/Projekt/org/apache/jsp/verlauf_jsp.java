/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.95
 * Generated at: 2025-10-14 10:41:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import de.uniwue.apps.jm1.User;
import de.uniwue.apps.jm1.Item;
import de.uniwue.apps.jm1.Main;
import de.uniwue.apps.jm1.Buchung;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;

public final class verlauf_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(8);
    _jspx_imports_classes.add("de.uniwue.apps.jm1.Buchung");
    _jspx_imports_classes.add("java.text.DecimalFormat");
    _jspx_imports_classes.add("de.uniwue.apps.jm1.User");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("de.uniwue.apps.jm1.Item");
    _jspx_imports_classes.add("de.uniwue.apps.jm1.Main");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

User user = (User) session.getAttribute("user");
if (user == null) {
    response.sendRedirect("benutzer.jsp");
    return;
}
user = User.getUserbyUID("" + user.getUid());
session.setAttribute("user", user);



// Pagination Parameter
int currentPage = 1;
int itemsPerPage = 10;
try {
    String pageParam = request.getParameter("page");
    if (pageParam != null) {
        currentPage = Integer.parseInt(pageParam);
        if (currentPage < 1) currentPage = 1;
    }
} catch (NumberFormatException e) {
    currentPage = 1;
}

// Formatierungen
DecimalFormat euroFormat = new DecimalFormat("#,##0.00 €");
SimpleDateFormat dateFormat = new SimpleDateFormat("dd.MM.yyyy HH:mm");
String guthaben = euroFormat.format(user.getGuthaben() / 100.0);

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"de\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Verlauf - WueKaStL</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/style.css\">\r\n");
      out.write("    <script src=\"js/jquery-3.7.1.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <!-- Header -->\r\n");
      out.write("    <div class=\"header\">\r\n");
      out.write("        <div class=\"user-info-header\">\r\n");
      out.write("            <div class=\"user-name-header\">");
      out.print( user.getVorname() );
      out.write(' ');
      out.print( user.getNachname() );
      out.write("</div>\r\n");
      out.write("            <div class=\"saldo\">");
      out.print( guthaben );
      out.write("</div>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("         <a class=\"logo\" href=\"index.jsp\" >WueKaStL</a>\r\n");
      out.write("        \r\n");
      out.write("        <a href=\"index.jsp\" class=\"btn  btn-danger\" >zur Startseite</a>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Hauptbereich -->\r\n");
      out.write("    \r\n");
      out.write("    <div class=\"main\">\r\n");
      out.write("        <div class=\"verlauf-section\">\r\n");
      out.write("                    <div class=\"verlauf-table-container\">\r\n");
      out.write("                        <table class=\"verlauf-table\">\r\n");
      out.write("                            <caption>Transaktionsverlauf</caption>\r\n");
      out.write("                            <thead>\r\n");
      out.write("                                <tr>\r\n");
      out.write("                                    <th>Datum</th>\r\n");
      out.write("									<th>#</th>\r\n");
      out.write("                                    <th>Summe</th>\r\n");
      out.write("                                    <th>Kommentar</th>\r\n");
      out.write("                                    <th>Inhalt</th>\r\n");
      out.write("                                    <th></th>\r\n");
      out.write("                                    <th></th>\r\n");
      out.write("                                </tr>\r\n");
      out.write("                            </thead>\r\n");
      out.write("                            <tbody>\r\n");
      out.write("    								");
 
    									java.util.List<Buchung> alleBuchungen = Buchung.getBuLi(user);
    									alleBuchungen.sort((b1, b2) -> b2.getDatum().compareTo(b1.getDatum()));
    									
    									// Pagination Berechnung
    									int totalItems = alleBuchungen.size();
    									int totalPages = (int) Math.ceil((double) totalItems / itemsPerPage);
    									int startIndex = (currentPage - 1) * itemsPerPage;
    									int endIndex = Math.min(startIndex + itemsPerPage, totalItems);
    									
    									// Nur die Buchungen für die aktuelle Seite
    									java.util.List<Buchung> buchungen = alleBuchungen.subList(startIndex, endIndex);
    							    	
    								    java.util.Date jetzt = new java.util.Date(); 
    								    long zweiTageMillis = 2L * 24 * 60 * 60 * 1000; // 2 Tage in Millisekunden
								
    								    for(Buchung buchung : buchungen) {
    								        String betrag = euroFormat.format(buchung.getSumme() / 100.0);
    								        String itemlist = Buchung.itemlistToString(buchung);
    								        String datum = dateFormat.format(buchung.getDatum());
    								        String buchungstyp = buchung.getBt().toString().toLowerCase();
								
    								        boolean istNeuGenug = (jetzt.getTime() - buchung.getDatum().getTime()) <= zweiTageMillis;
   								 
      out.write("\r\n");
      out.write("    								    <tr class=\"");
      out.print( buchungstyp  );
      out.write("\">\r\n");
      out.write("    								        <td>");
      out.print( datum );
      out.write("</td>\r\n");
      out.write("    								        <td>");
      out.print( buchung.getUid() );
      out.write("</td>\r\n");
      out.write("    								        <td class=\"betrag\">");
      out.print( betrag );
      out.write("</td>\r\n");
      out.write("    								        <td>");
      out.print( buchung.getKommentar() != null ? buchung.getKommentar() : "-" );
      out.write("</td>\r\n");
      out.write("    								        <td>");
      out.print( itemlist != null && !itemlist.trim().isEmpty() ? itemlist : "-" );
      out.write("</td>\r\n");
      out.write("    								        \r\n");
      out.write("    								        ");
 if(buchungstyp.equals("striche") && istNeuGenug) { 
      out.write("\r\n");
      out.write("    								            <td>\r\n");
      out.write("   								 								                <form action=\"buchungen\" method=\"post\">\r\n");
      out.write("    								                    <input type=\"hidden\" name=\"");
      out.print(Main.USER_UID_PARAM);
      out.write("\" value=\"");
      out.print(user.getUid());
      out.write("\">\r\n");
      out.write("    								                    <input type=\"hidden\" name=\"buchungID\" value=\"");
      out.print( buchung.getUid() );
      out.write("\">\r\n");
      out.write("    								                    <input type=\"hidden\" name=\"tablet\" value=\"1\">\r\n");
      out.write("    								                    <button type=\"submit\" name=\"method\" value=\"bearbeitenBuchung\" class=\"btn btn-edit\">Bearbeiten</button>\r\n");
      out.write("    								                </form>\r\n");
      out.write("    								            </td>\r\n");
      out.write("    								        ");
 } else { 
      out.write("\r\n");
      out.write("    								            <td>-</td>\r\n");
      out.write("    								        ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("    								        <td>\r\n");
      out.write("                								");
 if(istNeuGenug && buchungstyp.equals("striche")) { 
      out.write("\r\n");
      out.write("    								                <form action=\"buchungen\" method=\"post\">\r\n");
      out.write("    								                    <input type=\"hidden\" name=\"");
      out.print(Main.USER_UID_PARAM);
      out.write("\" value=\"");
      out.print(user.getUid());
      out.write("\">\r\n");
      out.write("    								                    <input type=\"hidden\" name=\"buchungID\" value=\"");
      out.print( buchung.getUid() );
      out.write("\">\r\n");
      out.write("    								                    <button type=\"submit\" name=\"method\" value=\"loescheBuchung\" class=\"btn btn-danger\">Löschen</button>\r\n");
      out.write("    								                </form>\r\n");
      out.write("    								            ");
 } else { 
      out.write("\r\n");
      out.write("    								                -\r\n");
      out.write("    								            ");
 } 
      out.write("\r\n");
      out.write("    								        </td>\r\n");
      out.write("    								    </tr>\r\n");
      out.write("    								");
 } 
      out.write("\r\n");
      out.write("								</tbody>\r\n");
      out.write("\r\n");
      out.write("                        </table>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    \r\n");
      out.write("                  \r\n");
      out.write("                </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Footer -->\r\n");
      out.write("    <div class=\"footer\">\r\n");
      out.write("    	<!-- Pagination Navigation -->\r\n");
      out.write("                    ");
 if (totalPages > 1) { 
      out.write("\r\n");
      out.write("                    <div class=\"pagination\">\r\n");
      out.write("                        \r\n");
      out.write("                        <div class=\"pagination-controls\">\r\n");
      out.write("                            <!-- Vorherige Seite -->\r\n");
      out.write("                            ");
 if (currentPage > 1) { 
      out.write("\r\n");
      out.write("                                <a href=\"verlauf.jsp?page=");
      out.print( currentPage - 1 );
      out.write("\" class=\"btn btn-auswahl\"><i class=\"arrow left\"></i> Vorherige</a>\r\n");
      out.write("                            ");
 } else { 
      out.write("\r\n");
      out.write("                            	<a href=\"\" class=\"btn btn-auswahl\"  ><i class=\"arrow left\"></i> Vorherige</a>\r\n");
      out.write("							");
 } 
      out.write("\r\n");
      out.write("                            <!-- Seitenzahlen -->\r\n");
      out.write("                            <div class=\"page-numbers\">\r\n");
      out.write("                                ");
 
                                int startPage = Math.max(1, currentPage - 1);
                                int endPage = Math.min(totalPages, currentPage + 1);
                                
                                // Erste Seite falls nicht sichtbar
                                if (startPage > 1) { 
      out.write("\r\n");
      out.write("                                    <a href=\"verlauf.jsp?page=1\" class=\"page-number\">1</a>\r\n");
      out.write("                                    ");
 if (startPage > 2) { 
      out.write("\r\n");
      out.write("                                        <span class=\"page-dots\">...</span>\r\n");
      out.write("                                    ");
 } 
      out.write("\r\n");
      out.write("                                ");
 }
                                
                                // Sichtbare Seitenzahlen
                                for (int i = startPage; i <= endPage; i++) { 
      out.write("\r\n");
      out.write("                                    ");
 if (i == currentPage) { 
      out.write("\r\n");
      out.write("                                        <span class=\"page-number active\">");
      out.print( i );
      out.write("</span>\r\n");
      out.write("                                    ");
 } else { 
      out.write("\r\n");
      out.write("                                        <a href=\"verlauf.jsp?page=");
      out.print( i );
      out.write("\" class=\"page-number\">");
      out.print( i );
      out.write("</a>\r\n");
      out.write("                                    ");
 } 
      out.write("\r\n");
      out.write("                                ");
 }
                                
                                // Letzte Seite falls nicht sichtbar
                                if (endPage < totalPages) { 
      out.write("\r\n");
      out.write("                                    ");
 if (endPage < totalPages - 1) { 
      out.write("\r\n");
      out.write("                                        <span class=\"page-dots\">...</span>\r\n");
      out.write("                                    ");
 } 
      out.write("\r\n");
      out.write("                                    <a href=\"verlauf.jsp?page=");
      out.print( totalPages );
      out.write("\" class=\"page-number\">");
      out.print( totalPages );
      out.write("</a>\r\n");
      out.write("                                ");
 } 
      out.write("\r\n");
      out.write("                            </div>\r\n");
      out.write("                            \r\n");
      out.write("                            <!-- Nächste Seite -->\r\n");
      out.write("                            ");
 if (currentPage < totalPages) { 
      out.write("\r\n");
      out.write("                                <a href=\"verlauf.jsp?page=");
      out.print( currentPage + 1 );
      out.write("\" class=\"btn btn-auswahl\">Nächste <i class=\"arrow right\"></i></a>\r\n");
      out.write("                            ");
 } else { 
      out.write("\r\n");
      out.write("								<a href=\"\" class=\"btn btn-auswahl\"   >Nächste <i class=\"arrow right\"></i></a>\r\n");
      out.write("							");
 } 
      out.write("\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    ");
 } 
      out.write("\r\n");
      out.write("        <div class=\"navigation\">\r\n");
      out.write("				<a href=\"verlauf.jsp\" class=\"btn btn-auswahl active\">Verlauf</a>\r\n");
      out.write("				<a href=\"profil.jsp\" class=\"btn btn-auswahl\">Profil</a>\r\n");
      out.write("				");
 if(user.isAdmin()) { 
      out.write("\r\n");
      out.write("                        <a href=\"admin_item.jsp\" class=\"btn btn-auswahl admin-nav\">Artikel</a>\r\n");
      out.write("                        <a href=\"admin_user.jsp\" class=\"btn btn-auswahl admin-nav\">Benutzer und Buchungen</a>\r\n");
      out.write("                    ");
 } 
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("	</div> \r\n");
      out.write("\r\n");
      out.write("    <script src=\"js/script.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
